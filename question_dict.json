{"type": "multiple choice", "questions": [{"question": "What is the purpose of the Prototype pattern?", "options": ["To create new objects from scratch", "To copy an existing object as a blueprint for creating new objects", "To reduce the complexity of object creation", "To maintain object relationships"], "answer": "b. To copy an existing object as a blueprint for creating new objects"}, {"question": "Which component is responsible for creating new objects using the Prototype pattern?", "options": ["Prototype", "Concrete Prototype", "Client", "Prototype Registry"], "answer": "c. Client"}, {"question": "When is the Prototype pattern useful?", "options": ["When object creation is more efficient by copying an existing object", "When a class cannot anticipate the type of objects it must create", "When configuring complex objects with different properties", "All of the above"], "answer": "d. All of the above"}, {"question": "What are the pros of using the Prototype pattern?", "options": ["Object creation efficiency and flexible object creation", "Reduced complexity and maintains object relationships", "Efficient cloning and reduced need for proper initialization", "All of the above"], "answer": "d. All of the above"}, {"question": "What are the cons of using the Prototype pattern?", "options": ["Cloning complexity and potential for inefficient cloning", "Need for proper initialization and maintaining prototypes", "Object creation efficiency and reduced complexity", "All of the above"], "answer": "a. Cloning complexity and potential for inefficient cloning"}]}